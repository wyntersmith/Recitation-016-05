<%- include ('../partials/header') %>
  <%- include ('../partials/menu') %>

    <main style="background: #6a11cb;">

      <body style="background: #6a11cb;">
        <div class="container">
          <div class="row">
          <div class="content">
            <div id="map"></div>
          </div>
          <div class="row">
              
          </div>
        </div>
        </div>

        <!-- <div id="sidebar" class="sidebar" style="border-radius: 1rem;"> -->
        <!-- <div id="sidebar">
          <h2 class="text-light" id="partyName"></h2>
          <p class="text-light" id="partyDescription"></p>
          <p class="text-light" id="partyDate"></p>
          <p class="text-light" id="partyStartTime"></p>
          <button class="btn btn-dark" id="viewHostProfile" style="visibility: hidden;" >View Host Profile</button>
        </div> -->
        <div style="padding-left: 24px; padding-top: 24px; ">
          <div class="jumbotron jumbotron-fluid" style="height: 25vh; max-width: 33%; border-radius: 10px 100px / 120px; box-shadow: 0 10px 16px ; ">
            <div class="container" style="padding-left: 15%;">
              <h1 class="display-4 display: flex;" style="padding-top: 0px;" >Find a party!</h1>
              <p class="lead">Click on a location to see the party detials.</p>
              </div>
            </div>
        </div>

        <div style="padding-left: 2%; padding-right: 2%; height: 56vh; display: flex;">
          <div class="card text-white bg-dark border-dark mb-3" id="sidebar" style="width: 33%; visibility: hidden;">
              <img src="https://voyd-theta.s3.amazonaws.com/group_website/groups/bf634e52-dc41-4b3b-8101-efb69cd3ffa8/IMG_0016.JPG" class="card-img-top" id="partyImage" style="padding: 2%; height: 40%; object-fit: cover;" alt="party image">
            <div class="card-body" style="height: 30vh;">
              <h5 class="card-title" id="partyName"></h5>
              <p class="card-text" id="partyDescription"></p>
              <div class="row">
                <p class="card-text col" id="partyDate"></p>
                <p class="card-text col" id="partyStartTime"></p>
              </div>
              <button class="btn btn-secondary" id="viewHostProfile" style="visibility: hidden;">View Host</button>
            </div>
          </div>
        </div>

        <div id="hostProfilePopup" class="host-profile-popup">
          <div style="border-radius: 1rem;" class="host-profile-content">
            <h2 class="text-light" id="hostName"></h2>
            <p class="text-light" id="partiesHosted"></p>
            <button class="btn btn-dark" id="closeHostProfile">Close</button>
          </div>
        </div>

      </body>

      <%- include ('../partials/footer') %>
    </main>

    <style>
      body {
        margin: 0;
        padding: 0;
      }

      .menu-bar {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        z-index: 100;
      }

      #map {
        position: absolute;
        top: 64px;
        left: 35%;
        right: 10px;
        bottom: 60px;
        z-index: 0;
      }

      .sidebar {
        position: fixed;
        top: 50%;
        left: -250px;
        width: 250px;
        height: 75%;
        background-color: #6a11cb;
        transition: left 0.3s ease-in-out;
        transform: translateY(-50%);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 1rem;
        box-shadow: -2px 0px 10px rgba(0, 0, 0, 0.1);
        text-align: center;
      }

      .sidebar.active {
        left: 0;
      }


      .host-profile-popup {
        display: none;
        position: fixed;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1000;
      }

      .host-profile-content {
        background-color: #6a11cb;
        width: 300px;
        padding: 1rem;
        position: absolute;
        left: 50%;
        top: 50%;
        text-align: center;
        transform: translate(-50%, -50%);
        box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
      }
    </style>

    <script>
      // Load the Mapbox GL JS library
      const script = document.createElement('script');
      script.src = 'https://api.mapbox.com/mapbox-gl-js/v2.6.1/mapbox-gl.js';
      script.onload = () => initMap();
      document.head.appendChild(script);
      document.write('<link href="https://api.mapbox.com/mapbox-gl-js/v2.6.1/mapbox-gl.css" rel="stylesheet" />');

      function showSidebar(party) {
        document.getElementById('partyName').innerText = party.party_name;
        document.getElementById('partyDescription').innerText = party.party_description;
        var date = new Date(party.party_date);
        document.getElementById('partyDate').innerText = `Date: ${date.toLocaleDateString()}`;
        document.getElementById('partyStartTime').innerText = `Start Time: ${party.start_time}`;

        // Show sidebar
        let sidebar =  document.getElementById('sidebar');
        sidebar.classList.add('active');
        sidebar.style.visibility = 'visible';

        document.getElementById('viewHostProfile').style.visibility = 'visible';

        // Add event listener for host profile button
        document.getElementById('viewHostProfile').onclick = () => {
          showHostProfile(party.host_user_id);
        };
      }

      async function showHostProfile(hostUserId) {

        let hostName =  'Name not found';
        let partiesHosted = 'Data not found';
        console.log(hostName, partiesHosted);

        try {
          console.log("trying")
          const response = await fetch(`/get_profile/${hostUserId}`);
          const user_data = await response.json();


          console.log(user_data);
          console.log(user_data["return_data"][0]["firstname"]);

          hostName = user_data["return_data"][0]["firstname"] + " " + user_data["return_data"][0]["lastname"];
          partiesHosted = user_data["return_data1"][0]["parties_hosted"];

        } catch (error) {
          console.error('Error fetching user info:', error);
        }

        console.log(hostName, partiesHosted);

        document.getElementById('hostName').innerText = hostName;
        document.getElementById('partiesHosted').innerText = `Parties Hosted: ${partiesHosted}`;

        // Show host profile popup
        document.getElementById('hostProfilePopup').style.display = 'block';

        // Add event listener for close button
        document.getElementById('closeHostProfile').onclick = () => {
          document.getElementById('hostProfilePopup').style.display = 'none';
        };
      }


      async function fetchParties() {
        try {
          const response = await fetch('/api/parties');
          const parties = await response.json();
          console.log('Fetched parties (client-side):', parties);
          return parties;
        } catch (error) {
          console.error('Error fetching parties:', error);
        }
      }

      async function FetchUsers() {
        try {
          const response = await fetch('/api/parties');
          const parties = await response.json();
          console.log('Fetched parties (client-side):', parties);
          return parties;
        } catch (error) {
          console.error('Error fetching parties:', error);
        }
      }


      async function createPopup(party) {
        const container = document.createElement('div');

        const name = document.createElement('h3');
        name.textContent = party.party_name;
        container.appendChild(name);

        const location = document.createElement('p');
        location.textContent = `Location: ${party.location}`;
        container.appendChild(location);

        const date = document.createElement('p');
        date.textContent = `Date: ${party.party_date}`;
        container.appendChild(date);

        const time = document.createElement('p');
        time.textContent = `Start Time: ${party.start_time}`;
        container.appendChild(time);

        const description = document.createElement('p');
        description.textContent = party.party_description;
        container.appendChild(description);

        return new mapboxgl.Popup().setDOMContent(container);
      }

      // Initialize the map
      async function initMap() {
        mapboxgl.accessToken = 'pk.eyJ1IjoiaGF5ZGVidWciLCJhIjoiY2xmbmdhY21oMDZ2ODN0cGo4M250eTZlcCJ9.CFyfPc5kxT_YYwDkNGlJvA';

        const map = new mapboxgl.Map({
          container: 'map',
          style: 'mapbox://styles/mapbox/dark-v10',
          center: [-105.2705, 40.0150], // Boulder, CO coordinates by default but center based off location if given later
          zoom: 14
        });

        // disable map rotation using right click + drag
        map.dragRotate.disable();
        
        // disable map rotation using touch rotation gesture
        map.touchZoomRotate.disableRotation();

        map.addControl(new mapboxgl.NavigationControl());

        // Get user's current location and set the map's center
        navigator.geolocation.getCurrentPosition(
          (position) => {
            map.setCenter([position.coords.longitude, position.coords.latitude]);
          },
          (error) => {
            console.error('Error getting current location:', error);
          },
          { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }
        );

        const parties = await fetchParties();

        for (const party of parties) {
          const marker = new mapboxgl.Marker()
            .setLngLat([party.longitude, party.latitude])
            .addTo(map);

          // Add event listener for marker click
          marker.getElement().addEventListener('click', () => {
            showSidebar(party);
          });
        }
      }
    </script>